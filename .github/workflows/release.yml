name: Customer API | Release

on:
  workflow_dispatch:

env:
  AZURE_REGISTRY_NAME: tiagokcontainerregistry
  AZURE_IMAGE_NAME: customer-api
  AZURE_IMAGE_TAG: latest

permissions:
  id-token: write
  actions: read
  contents: read
  packages: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ALL_SECRETS: ${{ toJson(secrets) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
    
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.AZURE_REGISTRY_NAME }}

      - name: Set up Kubectl
        uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AZURE_AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

      - name: Set environment variables
        run: |
          # Extract ENV_ prefixed variables from ALL_SECRETS
          ENV_VARS=$(echo "$ALL_SECRETS" | jq -r 'to_entries | .[] | select(.key | startswith("ENV_")) | "\(.key)=\(.value)"')
          echo "Extracted ENV Vars: $ENV_VARS"

          # Check if values.yaml already has an env section and remove it if it does
          if grep -q '^env:' ./tools/helm/customer-api-chart/values.yaml; then
            sed -i '/^env:/,/^}/d' ./tools/helm/customer-api-chart/values.yaml
          fi

          # Append the env block to the end of the values.yaml file
          echo "env: {" >> ./tools/helm/customer-api-chart/values.yaml

          # Loop through each variable and export it
          echo "$ENV_VARS" | while IFS='=' read -r key value; do
            if [[ "$key" =~ ^ENV_ ]]; then
              new_key="${key#ENV_}"
              echo "$new_key=$value" >> $GITHUB_ENV
              # Append to values.yaml in the correct format
              echo "  ${new_key}: \"\${${new_key}}\"" >> ./tools/helm/customer-api-chart/values.yaml
            else
              echo "Invalid variable name: $key"
            fi
          done

          # Close the env block
          echo "}" >> ./tools/helm/customer-api-chart/values.yaml

      - name: Show updated values.yaml
        run: cat ./tools/helm/customer-api-chart/values.yaml

      - name: Show environment variable before token replacement
        run: |
          echo "CONNECTIONSTRINGS__DATABASE: $CONNECTIONSTRINGS__DATABASE"

      - name: Replace tokens in values.yaml
        uses: cschleiden/replace-tokens@v1
        with:
          file: ./tools/helm/customer-api-chart/values.yaml
          tokenPrefix: '${'
          tokenSuffix: '}'
          
      - name: Show updated values.yaml
        run: cat ./tools/helm/customer-api-chart/values.yaml

      - name: Deploy with Helm
        run: |
          helm upgrade --install customer-api-release ./tools/helm/customer-api-chart \
            --set image.repository=${{ env.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.AZURE_IMAGE_NAME }} \
            --set image.tag=${{ env.AZURE_IMAGE_TAG }}
