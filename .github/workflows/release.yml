name: Customer API | Release

on:
  workflow_dispatch:

env: ${{ secrets }}

permissions:
  id-token: write
  actions: read
  contents: read
  packages: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
    
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.AZURE_REGISTRY_NAME }}

      - name: Set up Kubectl
        uses: azure/aks-set-context@v2
        with:
          resource-group: ${{ secrets.AZURE_AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_AKS_CLUSTER_NAME }}

      - name: Extract Secrets with env_ Prefix
        id: extract-secrets
        run: |
          echo "Extracting env-prefixed secrets..."
          found=false
          IFS=$'\n'
          for secret in $(printenv | grep ^ENV_); do
            found=true
            key=$(echo "$secret" | sed 's/^ENV_//g' | cut -d= -f1)
            value=$(echo "$secret" | cut -d= -f2-)
            # Append the key-value pair to the env-vars file
            echo "$key=$value" >> env-vars.txt
            echo "Extracted: $key"
          done
          if [ "$found" = false ]; then
            echo "No env-prefixed secrets found."
            exit 1
          fi
          unset IFS

      - name: Display Transformed Environment Variables (Optional)
        run: cat env-vars.txt

      - name: Deploy with Helm
        run: |
          helm upgrade --install customer-api-release ./tools/helm/customer-api-chart \
            --set image.repository=${{ env.AZURE_REGISTRY_NAME }}.azurecr.io/${{ env.AZURE_IMAGE_NAME }} \
            --set image.tag=${{ env.AZURE_IMAGE_TAG }} \
            $(cat env-vars.txt | sed 's/^/--set env./g')
